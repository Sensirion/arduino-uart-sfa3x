/*
 * THIS FILE IS AUTOMATICALLY GENERATED AND MUST NOT BE EDITED MANUALLY!
 *
 * SHDLC-Generator: 0.8.2
 * Yaml Version: 0.1.0
 * Template Version: 0.2.0
 */
/*
 * Copyright (c) 2021, Sensirion AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of Sensirion AG nor the names of its
 *   contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef SENSIRIONSHDLCSFA3X_H
#define SENSIRIONSHDLCSFA3X_H

#include <SensirionCoreArduinoLibrary.h>

class SensirionShdlcSfa3x {

  public:
    SensirionShdlcSfa3x();
    /**
     * begin() - Initializes the SensirionShdlcSfa3x class.
     *
     * @param serial Arduino stream object to be communicated with.
     *
     */
    void begin(Stream& serial);

    /**
     * startContinuousMeasurement() - Default output format 0.
     *
     * @note This command is only available in idle mode.
     *
     * @return 0 on success, an error code otherwise
     */
    uint16_t startContinuousMeasurement(void);

    /**
     * stopMeasurement() - Leaves the measurement mode and returns to idle mode.
     *
     * @note This command is only available in measurement mode.
     *
     * @return 0 on success, an error code otherwise
     */
    uint16_t stopMeasurement(void);

    /**
     * readMeasuredValuesOutputFormat2() - Read measured values integer.
     *
     * @param hcho Formaldehyde concentration in ppb as a 16-bit signed integer.
     * Positive values only, negative values are coerced to zero. Scale factor 5
     * ppb^(-1).
     *
     * @param relativeHumidity Relative humidity in %. Values between 0 and 100
     * only. With internal correction for temperature offset (if configured).
     * Scale factor 100 %^(-1).
     *
     * @param temperature Temperature in °C. With internal correction for
     * temperature offset (if configured). Scale factor 200 °C^(-1).
     *
     * @return 0 on success, an error code otherwise
     */
    uint16_t readMeasuredValuesOutputFormat2(int16_t& hcho,
                                             int16_t& relativeHumidity,
                                             int16_t& temperature);

    /**
     * getDeviceMarking() - Gets the device marking from the device.
     *
     * @param deviceMarking String containing the device marking.
     *
     * @return 0 on success, an error code otherwise
     */
    uint16_t getDeviceMarking(uint8_t deviceMarking[],
                              uint8_t deviceMarkingSize);

    /**
     * deviceReset() - Executes a reset on the device.
     *
     * @note The device will reply before executing the reset.
     *
     * @return 0 on success, an error code otherwise
     */
    uint16_t deviceReset(void);

  private:
    Stream* _serial = nullptr;
};

#endif /* SENSIRIONSHDLCSFA3X_H */
